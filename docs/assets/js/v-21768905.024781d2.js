(self.webpackChunkSugar_NetCore_Documents=self.webpackChunkSugar_NetCore_Documents||[]).push([[207],{1505:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-21768905",path:"/zh/api/utils.html",title:"工具函数",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"NetDateTime",slug:"netdatetime",children:[]},{level:2,title:"NetEncrypt",slug:"netencrypt",children:[]},{level:2,title:"NetEnum",slug:"netenum",children:[]},{level:2,title:"NetHttp",slug:"nethttp",children:[]},{level:2,title:"NetRMB",slug:"netrmb",children:[]},{level:2,title:"NetString",slug:"netstring",children:[]}],filePathRelative:"zh/api/utils.md",git:{}}},3555:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>r});var p=a(6252);const t=(0,p.Wm)("h1",{id:"工具函数",tabindex:"-1"},[(0,p.Wm)("a",{class:"header-anchor",href:"#工具函数","aria-hidden":"true"},"#"),(0,p.Uk)(" 工具函数")],-1),e=(0,p.Uk)("本节内容介绍组件库内置的帮助类（工具类）。阅读前，建议先阅读"),o={href:"/zh/guide/",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("指南"),l=(0,p.Uk)("。"),u=(0,p.uE)('<h2 id="netdatetime" tabindex="-1"><a class="header-anchor" href="#netdatetime" aria-hidden="true">#</a> NetDateTime</h2><p>时间转换工具类</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> datetime <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>\n    <span class="token comment">//返回类型为long的时间戳</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> timestamp1 <span class="token operator">=</span> NetDateTime<span class="token punctuation">.</span><span class="token function">ToTimeStamp</span><span class="token punctuation">(</span>datetime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//返回类型为long的时间戳（13位，精确到毫秒） TimeStampUnit:组件库内置枚举 </span>\n    <span class="token class-name"><span class="token keyword">var</span></span> timestamp2 <span class="token operator">=</span> NetDateTime<span class="token punctuation">.</span><span class="token function">ToTimeStamp</span><span class="token punctuation">(</span>datetime<span class="token punctuation">,</span> TimeStampUnit<span class="token punctuation">.</span>MilliSecond<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//时间戳转换为DateTime</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> time1 <span class="token operator">=</span> NetDateTime<span class="token punctuation">.</span><span class="token function">ToDateTime</span><span class="token punctuation">(</span><span class="token string">&quot;1625221744928&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//时间戳转换为DateTime</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> time2 <span class="token operator">=</span> NetDateTime<span class="token punctuation">.</span><span class="token function">ToDateTime</span><span class="token punctuation">(</span><span class="token number">1625221744928</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="netencrypt" tabindex="-1"><a class="header-anchor" href="#netencrypt" aria-hidden="true">#</a> NetEncrypt</h2><p>加密工具类</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> <span class="token keyword">value</span> <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">//MD5加密（16位）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> encrypt16 <span class="token operator">=</span> NetEncrypt<span class="token punctuation">.</span><span class="token function">MD5To16</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//MD5加密</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> encrypt32 <span class="token operator">=</span> NetEncrypt<span class="token punctuation">.</span><span class="token function">MD5To32</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="netenum" tabindex="-1"><a class="header-anchor" href="#netenum" aria-hidden="true">#</a> NetEnum</h2><p>枚举阅读工具类</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//将Enum转为Int32</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> <span class="token keyword">value</span> <span class="token operator">=</span> NetEnum<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span>AreYouOK<span class="token punctuation">.</span>Yes<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//获取Enum描述（System.ComponentModel.Description），没有描述会返回空字符串</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> description <span class="token operator">=</span> NetEnum<span class="token punctuation">.</span><span class="token function">GetDescription</span><span class="token punctuation">(</span>AreYouOK<span class="token punctuation">.</span>Yes<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//获取所有枚举成员</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> items <span class="token operator">=</span> NetEnum<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetItems</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AreYouOK<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//测试枚举</span>\n<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">AreYouOK</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">int</span></span>\n<span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;No, I&#39;m not happy&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>\n    No <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Yes, I&#39;m happy&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>\n    Yes <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="nethttp" tabindex="-1"><a class="header-anchor" href="#nethttp" aria-hidden="true">#</a> NetHttp</h2><p>Http请求工具类</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//发起Get请求</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> http1 <span class="token operator">=</span> NetHttp<span class="token punctuation">.</span><span class="token function">HttpGet</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//发起Post请求</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> http2 <span class="token operator">=</span> NetHttp<span class="token punctuation">.</span><span class="token function">HttpPost</span><span class="token punctuation">(</span><span class="token string">&quot;https://fanyi.baidu.com/sug&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;kw=5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//（异步）发起Get请求</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> http3 <span class="token operator">=</span> NetHttp<span class="token punctuation">.</span><span class="token function">HttpGetAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//（异步）发起Post请求，可以自定义额外的请求头</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token punctuation">{</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> http4 <span class="token operator">=</span> NetHttp<span class="token punctuation">.</span><span class="token function">HttpPostAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://fanyi.baidu.com/sug&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;kw=5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="netrmb" tabindex="-1"><a class="header-anchor" href="#netrmb" aria-hidden="true">#</a> NetRMB</h2><p>人民币转换工具类</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//人民币大写(decimal)</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> rmb1 <span class="token operator">=</span> <span class="token number">9999999.99m</span><span class="token punctuation">;</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> rmbText1 <span class="token operator">=</span> NetRMB<span class="token punctuation">.</span><span class="token function">ToChineseText</span><span class="token punctuation">(</span>rmb1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//人民币大写(string)</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> rmb2 <span class="token operator">=</span> <span class="token string">&quot;9090909.99&quot;</span><span class="token punctuation">;</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> rmbText2 <span class="token operator">=</span> NetRMB<span class="token punctuation">.</span><span class="token function">ToChineseText</span><span class="token punctuation">(</span>rmb2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="netstring" tabindex="-1"><a class="header-anchor" href="#netstring" aria-hidden="true">#</a> NetString</h2><p>字符串工具类</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> <span class="token keyword">value</span> <span class="token operator">=</span> <span class="token string">&quot;sugar.net&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">//将当字符串为null时，转为string.Empty</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> empty <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToEmptyIfNull</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//将当字符串为string.Empty时，转为null</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> nullValue <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToNullIfEmpty</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//判断字符串是否存在任何值</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> hasAnyValue <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">HasAnyValue</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//替换首个字符</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> first <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ReplaceFirst</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//替换结尾字符</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> last <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ReplaceLast</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//生成一个GUID</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> guid <span class="token operator">=</span> NetString<span class="token punctuation">.</span>GUID<span class="token punctuation">;</span>\n    <span class="token comment">//生成一个UNID（除去短横线的GUID）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> unid <span class="token operator">=</span> NetString<span class="token punctuation">.</span>UNID<span class="token punctuation">;</span>\n    <span class="token comment">//生成一个1到10位的随机字符串（含有数字、英文、特殊字符）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomString1 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> StringRandomRule<span class="token punctuation">.</span>Normal<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成一个1到10位的随机字符串（仅含英文）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomString2 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> StringRandomRule<span class="token punctuation">.</span>Characters<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成一个1到10位的随机字符串（仅含数字）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomString3 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> StringRandomRule<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成一个1到10位的随机字符串（含有数字、英文）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomString4 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> StringRandomRule<span class="token punctuation">.</span>NumbersAndCharacters<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成10位随机字符串（含有数字、英文、特殊字符）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomString5 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> StringRandomRule<span class="token punctuation">.</span>Normal<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成10位随机字符串（含有数字、英文、特殊字符）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomString6 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> StringRandomRule<span class="token punctuation">.</span>Normal<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成10位随机字符串（仅含数字）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomNumber1 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成1到10位随机字符串（仅含数字）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomNumber2 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomNumber</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成10位随机字符串（仅含英文）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomCharacters1 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomCharacters</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//生成1到10位随机字符串（仅含英文）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> randomCharacters <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">RandomCharacters</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//转为Base64编码字符串</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> base64 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToBase64</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//转为Base64编码字符串（指定编码字符集）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> gbkBase64 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToBase64</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//从base64字符串转回</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> output <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">FromBase64</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//从base64字符串转回（指定编码字符集）</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> gbkOutput <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">FromBase64</span><span class="token punctuation">(</span>gbkBase64<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//ip转为Int64</span>\n    <span class="token keyword">value</span> <span class="token operator">=</span> <span class="token string">&quot;192.168.1.1&quot;</span><span class="token punctuation">;</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> number1 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToInt64FromIp</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//int64转回ip</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> ipNumber1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">2130706433</span><span class="token punctuation">;</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> ipValue1 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToIpFromInt64</span><span class="token punctuation">(</span>ipNumber1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//ip转为UInt32</span>\n    <span class="token keyword">value</span> <span class="token operator">=</span> <span class="token string">&quot;192.168.1.1&quot;</span><span class="token punctuation">;</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> number2 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToUInt32FromIp</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//int64转回ip</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> ipNumber2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">uint</span><span class="token punctuation">)</span><span class="token number">2130706433</span><span class="token punctuation">;</span>\n    <span class="token class-name"><span class="token keyword">var</span></span> ipValue2 <span class="token operator">=</span> NetString<span class="token punctuation">.</span><span class="token function">ToIpFromInt64</span><span class="token punctuation">(</span>ipNumber2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div>',18),r={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("p",null,[e,(0,p.Wm)("a",o,[c,(0,p.Wm)(a)]),l]),u],64)}}}}]);